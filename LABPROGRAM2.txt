CREATE TABLE PUBLISHER(
NAME VARCHAR2(20) PRIMARY KEY,
ADDRESS VARCHAR2(20),
PHONE NUMBER(10)); 


CREATE TABLE BOOK (
 BOOK_ID VARCHAR2(20) PRIMARY KEY, 
 TITLE VARCHAR2(40), 
 PUBLISHER_NAME VARCHAR2(20) references
 PUBLISHER(NAME) on delete cascade, 
 PUB_YEAR INT);


CREATE  TABLE  BOOK_AUTHORS(
BOOK_ID varchar(20),
AUTHOR_NAME VARCHAR2(20), 
PRIMARY KEY(BOOK_ID, AUTHOR_NAME),
FOREIGN KEY(BOOK_ID) REFERENCES BOOK ON DELETE CASCADE);


CREATE TABLE LIBRARY_PROGRAMME(
PROGRAMME_ID VARCHAR(20) PRIMARY_KEY,
PROGRAMME_NAME VARCHAR(10),
ADDRESS VARCHAR(20));



CREATE TABLE BOOK_COPIES(
 BOOK_ID VARCHAR(20) 
 REFERENCES BOOK(BOOK_ID) 
 ON DELETE CASCADE,
 PROGRAMME_ID VARCHAR(20) 
 REFERENCES 
 LIBRARY_PROGRAMME(PROGRAMME_ID) 
 ON DELETE CASCADE,
 NO_OF_COPIES NUMBER(2),
 primary key(BOOK_ID, PROGRAMME_ID));



CREATE TABLE  BOOK_LENDING(
BOOK_ID VARCHAR(20),
PROGRAMME_ID VARCHAR(20),
CARD_NO VARCHAR(20),
DATE_OUT DATE,
DUE_DATE DATE, 
PRIMARY KEY(PROGRAMME_ID, BOOK_ID, CARD_NO),
FOREIGN KEY(BOOK_ID) 
REFERENCES book(BOOK_ID) ON DELETE CASCADE,
FOREIGN KEY(PROGRAMME_ID)
REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE,
CONSTRAINT CK1 CHECK (DUE_DATE > DUE_DATE));

        

select b.book_id, title, publisher_name,author_name, no_of_copies
 from book b, book_authors a, book_copies bc
 where b.book_id = bc.book_id AND 
 b.book_id = a.book_id;




 SELECT card_no  FROM book_lending 
   WHERE date_out 
   BETWEEN '01-JAN-2023' 
   AND '30-JUN-2023' 
  GROUP BY card_no 
   HAVING COUNT(*) >= 3 ;



DELETE FROM book WHERE book_id = &bid;




CREATE TABLE BOOK1 (
 BOOK_ID VARCHAR2(20) PRIMARY KEY, 
 TITLE VARCHAR2(40), 
 PUBLISHER_NAME VARCHAR2(20) references
 PUBLISHER(NAME) on delete cascade, 
 PUB_YEAR INT)
 PARTITION BY RANGE(pub_year)
 (PARTITION p1 VALUES LESS THAN(2001),
  PARTITION p2 VALUES LESS THAN(2005),
  PARTITION P3 VALUES LESS THAN (2010),
   PARTITION P4 VALUES LESS THAN(MAXVALUE));








 Create view available_book
   As
   Select b.book_id, b.title, 
  sum(bc.no_of_copies)- (select count(*) from book_lending  bl where bl.book_id= b. book_id  grou
p by bl.book_id) as books_available  from book b, book_copies  bc where b.book_id=bc.book_id group b
y b.book_id,b.title;

                                     
